{"version":3,"sources":["components/Nav.js","components/config.js","components/App.js","serviceWorker.js","index.js"],"names":["TopNav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","id","Navbar","Brand","href","Component","daoAddress","daoABI","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","axios","require","web3","Web3","providers","HttpProvider","vrtContract","eth","Contract","daoContract","App","linkedAccount","accountType","totalSupply","holders","owner","holderTable","electionNumber","OpenedNumberElection","EndedNumberElection","electionTable","attachment","electionContent","window","ethereum","enable","clientWeb3","getAccounts","accounts","setState","currentProvider","alert","on","utils","toChecksumAddress","_this2","checkDashBoard","checkElectionStatus","address","methods","balanceOf","balance","getHolders","i","length","balanceOfHolder","tableRow","percentage","toFixed","balanceTableData","push","numberOfActive","proposalIndex","NumberOfElection","proposals","RowData","tableData","activeOrEnded","status","isVoteEnded","unixStamp","createdAt","time","newRowData","source","src","width","voteTime","NumberOfVoted","NumberOfYesMenber","NumberOfNoMember","voteAmount","votesForYes","votesForNo","console","log","unix_timestamp","date","Date","humanDateFormat","toLocaleString","pinFileToIPFS","pinataResponse","success","pinataUrl","url","linkedContract","createProposal","send","from","once","asyncToGenerator","regenerator_default","mark","_callee5","wrap","_context5","prev","next","_this3","stop","file","formData","FormData","append","post","headers","Content-Type","concat","_boundary","pinata_api_key","pinata_secret_api_key","then","response","data","IpfsHash","catch","error","message","_this4","holderTableData","columns","label","field","sort","rows","components_Nav","Tab","Container","defaultActiveKey","Row","Col","sm","Nav","variant","Item","Link","eventKey","Content","Pane","Card","bg","Header","Body","Text","mdbreact_esm","hover","entriesOptions","entries","pagesAmount","materialSearch","Form","Group","Label","Control","required","onChange","e","addLabel","target","files","defaultValue","controlId","as","value","placeholder","Button","onClick","createElection","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3c82aba.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { Navbar,} from 'react-bootstrap';\r\nimport { BsCurrencyExchange } from 'react-icons/bs'\r\n\r\nclass TopNav extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-primary\">\r\n                {/* <!-- Container wrapper --> */}\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <Navbar.Brand href=\"#home\"><h1 className=\"text-light\">  &nbsp;&nbsp;VEGAN ROB'S DAO</h1>\r\n                    </Navbar.Brand>\r\n                    </div>\r\n                </div>\r\n                </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNav;\r\n","export const RPC         =  \"https://kovan.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\"\r\nexport const vrtAddress  =  '0xbCd099A8673f7b8e9270DBff27FE109C9c588D46'\r\nexport const daoAddress  =  '0xe53cfd9793e51d042c41BaC7a01c56cFD1AAb396'\r\nexport const pinata_key  =  \"3ec6e5bad6c152f9c93d\"\r\nexport const pinata_secret = \"a3ccf4d2216ab2655ada4cff4273db391574632702711c2e0c80e435bb45e7af\"\r\n\r\nexport const  vrtABI =  [\r\n    {\r\n        \"inputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"value\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Approval\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"mintedAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Burnt\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"oldDaoAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newDaoAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"DaoAddressChanged\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"mintedAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Minted\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"previousOwner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"value\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Transfer\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_burnAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Burn\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"_mintAmount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"Mint\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"owner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"allowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"approve\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"account\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint8\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"subtractedValue\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"decreaseAllowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"getHolders\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address[]\",\r\n                \"name\": \"\",\r\n                \"type\": \"address[]\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"holder\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"spender\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"addedValue\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"increaseAllowance\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"name\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_newBlackAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"status\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"setBlackList\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_newDaoAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"setDAOAddress\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"symbol\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"totalSupply\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"recipient\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"from\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"to\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"amount\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"transferFrom\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"_newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transferOwner\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n\r\nexport const  daoABI =  [\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"tokenAddress\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"constructor\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"previousOwner\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": true,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"OwnershipTransferred\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"address\",\r\n                \"name\": \"votedAddress\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"voteAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"voteSetting\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"enum MyDAO.Status\",\r\n                \"name\": \"result\",\r\n                \"type\": \"uint8\"\r\n            }\r\n        ],\r\n        \"name\": \"Voted\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"anonymous\": false,\r\n        \"inputs\": [\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"id\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"cteatedAt\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"indexed\": false,\r\n                \"internalType\": \"string\",\r\n                \"name\": \"source\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"newVoteIsCreated\",\r\n        \"type\": \"event\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"url\",\r\n                \"type\": \"string\"\r\n            }\r\n        ],\r\n        \"name\": \"createProposal\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"owner\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"proposalIndex\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"proposals\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"id\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"createdAt\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"voteAmount\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"votesForYes\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"NumberOfYesMenber\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"votesForNo\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"NumberOfNoMember\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"enum MyDAO.Status\",\r\n                \"name\": \"status\",\r\n                \"type\": \"uint8\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"name\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"string\",\r\n                \"name\": \"source\",\r\n                \"type\": \"string\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"isVoteEnded\",\r\n                \"type\": \"bool\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"voteTime\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"renounceOwnership\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"voteID\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"stopVoting\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [],\r\n        \"name\": \"token\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"contract VRTDAO\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"newOwner\",\r\n                \"type\": \"address\"\r\n            }\r\n        ],\r\n        \"name\": \"transferOwnership\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"proposalId\",\r\n                \"type\": \"uint256\"\r\n            },\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"voteSetting\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"name\": \"vote\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n    },\r\n    {\r\n        \"inputs\": [\r\n            {\r\n                \"internalType\": \"address\",\r\n                \"name\": \"\",\r\n                \"type\": \"address\"\r\n            },\r\n            {\r\n                \"internalType\": \"uint256\",\r\n                \"name\": \"\",\r\n                \"type\": \"uint256\"\r\n            }\r\n        ],\r\n        \"name\": \"votesHistory\",\r\n        \"outputs\": [\r\n            {\r\n                \"internalType\": \"bool\",\r\n                \"name\": \"\",\r\n                \"type\": \"bool\"\r\n            }\r\n        ],\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n    }\r\n]\r\n","import React, { Component } from 'react';\r\nimport { Button,InputGroup, FormControl, Card, Row, Form, Tab, Col, Nav} from 'react-bootstrap';\r\nimport { MDBDataTableV5 } from 'mdbreact';\r\nimport Web3 from 'web3';\r\nimport './App.css';\r\nimport TopNav from './Nav';\r\nimport {RPC, vrtAddress, vrtABI, daoABI,daoAddress, pinata_key, pinata_secret} from './config'\r\nconst ethers = require('ethers')\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nconst web3 = new Web3(new Web3.providers.HttpProvider(RPC));\r\nconst vrtContract  = new web3.eth.Contract(vrtABI, vrtAddress)\r\nconst daoContract  = new web3.eth.Contract(daoABI, daoAddress)\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state={\r\n      // DASH BOARD\r\n      linkedAccount : '',\r\n      accountType : '',\r\n      totalSupply : '0',\r\n      holders     : [],\r\n      owner       : '',\r\n      holderTable : [],\r\n\r\n      // ELECTION STATUS\r\n      electionNumber : 0,\r\n      OpenedNumberElection : 0,\r\n      EndedNumberElection : 0,\r\n      electionTable : [],\r\n\r\n      // create Election\r\n      attachment    : [],\r\n      electionContent : ''\r\n    }\r\n  }\r\n\r\n  async componentWillMount(){\r\n    if(window.ethereum) {\r\n        window.web3 = new Web3(window.ethereum)\r\n        await window.ethereum.enable()\r\n        const clientWeb3    = window.web3;\r\n        const accounts = await clientWeb3.eth.getAccounts();\r\n        this.setState({\r\n            linkedAccount : accounts[0]\r\n        }) \r\n    } \r\n    else if(window.web3) {\r\n        window.web3 = new Web3(window.web3.currentProvider)\r\n        const clientWeb3    = window.web3;\r\n        const accounts = await clientWeb3.eth.getAccounts();\r\n        this.setState({\r\n            linkedAccount : accounts[0]\r\n        }) \r\n    } else {\r\n        window.alert('Non-Ethereum browser detected. Your should consider trying MetaMask!')\r\n    }\r\n    if(this.state.linkedAccount === ''){\r\n        return\r\n    }\r\n\r\n    const { ethereum } = window;\r\n    ethereum.on('accountsChanged',  (accounts) => {\r\n      accounts =   web3.utils.toChecksumAddress(accounts + '')\r\n      this.setState({\r\n        linkedAccount : accounts\r\n      })\r\n      this.checkDashBoard(this.state.linkedAccount)\r\n    });\r\n\r\n    this.checkDashBoard(this.state.linkedAccount) \r\n    this.checkElectionStatus() \r\n  }\r\n\r\n  async checkDashBoard (address){\r\n    let balance = await vrtContract.methods.balanceOf(address).call()\r\n    let owner   = await vrtContract.methods.owner().call()\r\n    let totalSupply = await vrtContract.methods.totalSupply().call()\r\n    let holders = await vrtContract.methods.getHolders().call()\r\n\r\n    this.setState({ \r\n      owner : owner,\r\n      totalSupply : totalSupply / 1,\r\n      holders : holders,\r\n      holderTable : []\r\n    })\r\n\r\n    for (let i = 0; i < this.state.holders.length; i++) {\r\n\r\n      let balanceOfHolder = await vrtContract.methods.balanceOf(this.state.holders[i]).call()\r\n      \r\n      let tableRow = {\r\n        id : i + 1,\r\n        address : this.state.holders[i],\r\n        balance : balanceOfHolder / 1,\r\n        percentage : (balanceOfHolder * 100 / this.state.totalSupply).toFixed(2) + '%'\r\n      }\r\n\r\n      let balanceTableData = this.state.holderTable\r\n      balanceTableData.push(tableRow)\r\n      this.setState({\r\n        holderTable : balanceTableData\r\n      })\r\n    }\r\n\r\n    if (address === owner){\r\n      this.setState({\r\n        accountType : 'owner'\r\n      })\r\n    } else {\r\n      if (balance > 0) {\r\n        this.setState({\r\n          accountType : 'member'\r\n        })\r\n      } else {\r\n        this.setState({\r\n          accountType : 'guest'\r\n        })\r\n      } \r\n    }\r\n  }\r\n\r\n  async checkElectionStatus() {\r\n\r\n    let numberOfActive = 0\r\n    let NumberOfElection = await daoContract.methods.proposalIndex().call()\r\n    this.setState({\r\n      electionTable : []\r\n    })\r\n    for (let i = 0; i < NumberOfElection / 1; i++) {\r\n      let RowData = await daoContract.methods.proposals(i).call()\r\n      let tableData = this.state.electionTable\r\n      let activeOrEnded \r\n      let status\r\n\r\n      if (RowData.isVoteEnded){\r\n        activeOrEnded = \"Ended\"\r\n      } else {\r\n        activeOrEnded = \"active\"\r\n        numberOfActive += 1\r\n      }\r\n\r\n      if (RowData.status == 0){\r\n        status = \"Accepted\"\r\n      } else {\r\n        status = \"Rejected\"\r\n      }\r\n\r\n      let time  = await this.unixStamp(RowData.createdAt/1 )\r\n\r\n      let newRowData = {\r\n        id : RowData.id / 1 + 1,\r\n        source :  <img src={RowData.source} width=\"100\" />,\r\n        name   : RowData.name,\r\n        createdAt : time,\r\n        voteTime  : RowData.voteTime / 1,\r\n        NumberOfVoted : RowData.NumberOfYesMenber / 1 + RowData.NumberOfNoMember / 1,\r\n        voteAmount    : RowData.voteAmount / 1,\r\n        NumberOfYesMenber : RowData.NumberOfYesMenber / 1,\r\n        votesForYes : RowData.votesForYes / 1,\r\n        NumberOfNoMember : RowData.NumberOfNoMember / 1,\r\n        votesForNo : RowData.votesForNo / 1,\r\n        status : status,\r\n        isVoteEnded : activeOrEnded\r\n      }\r\n\r\n      tableData.push(newRowData);\r\n      this.setState({\r\n        electionTable : tableData\r\n      })\r\n    }\r\n    console.log(this.state.electionTable)\r\n    this.setState({\r\n      NumberOfElection     : NumberOfElection / 1,\r\n      OpenedNumberElection : numberOfActive,\r\n      EndedNumberElection  : NumberOfElection / 1 - numberOfActive\r\n    })\r\n\r\n\r\n  }\r\n\r\n  async unixStamp (unix_timestamp) {\r\n\r\n    var date = new Date(unix_timestamp * 1000);\r\n    // Hours part from the timestamp\r\n    var humanDateFormat = date.toLocaleString() \r\n    return humanDateFormat\r\n  }\r\n\r\n  async createElection(){\r\n    let url\r\n    if (this.state.attachment == null)\r\n      return; \r\n    var pinataResponse  = await this.pinFileToIPFS(this.state.attachment)\r\n    if (pinataResponse.success) {\r\n      console.log(pinataResponse.pinataUrl)\r\n      // setURL(pinataResponse.pinataUrl)\r\n      url = pinataResponse.pinataUrl\r\n\r\n      \r\n      const linkedContract = new window.web3.eth.Contract(daoABI, daoAddress);\r\n      await linkedContract.methods.createProposal(this.state.electionContent + '', url+'')\r\n      .send({from : this.state.linkedAccount})\r\n      .once('confirmation', async () => {\r\n        this.checkElectionStatus()\r\n      })\r\n      \r\n      \r\n\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  async pinFileToIPFS(file) {\r\n    const url = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\r\n    \r\n    let formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    return axios.post(url,\r\n        formData,\r\n        {\r\n            headers: {\r\n                'Content-Type': `multipart/form-data; boundary= ${formData._boundary}`,\r\n                'pinata_api_key': pinata_key,\r\n                'pinata_secret_api_key': pinata_secret\r\n            }\r\n        }\r\n    ).then(function (response) {\r\n        //handle response here\r\n        console.log(response)\r\n        return {\r\n            success: true,\r\n            pinataUrl: \"https://gateway.pinata.cloud/ipfs/\" + response.data.IpfsHash\r\n        }\r\n    }).catch(function (error) {\r\n        //handle error here\r\n        console.log(error)\r\n        return {\r\n            success: false,\r\n            message: error.message,\r\n        }\r\n    });\r\n};\r\n\r\n\r\n  render() {\r\n\r\n\r\n    var rowsCaptureTable = this.state.holderTable\r\n    const holderTableData = {\r\n      columns : [\r\n\r\n        {\r\n            label : 'No',\r\n            field : 'id',\r\n            sort  : 'asc'\r\n        },\r\n        {\r\n            label : 'Holder Address',\r\n            field : 'address',\r\n        },\r\n        {\r\n            label : 'Balance ',\r\n            field : 'balance',\r\n        },  \r\n        {\r\n            label : 'Percentage ',\r\n            field : 'percentage',\r\n        },  \r\n      ],\r\n      rows : rowsCaptureTable,\r\n    }\r\n\r\n    var rowsCaptureTableElection = this.state.electionTable\r\n    const electionTable = {\r\n      columns : [\r\n      {\r\n        label : 'No',\r\n        field : 'id',\r\n        sort  : 'asc'\r\n      },\r\n      {\r\n        label : 'Image',\r\n        field : 'source',\r\n      },\r\n      {\r\n        label : 'Content ',\r\n        field : 'name',\r\n      },  \r\n      {\r\n        label : 'Created At ',\r\n        field : 'createdAt',\r\n      },  \r\n      {\r\n        label : 'Duration',\r\n        field : 'voteTime',\r\n      },\r\n      {\r\n        label : 'Voted Number',\r\n        field : 'NumberOfVoted',\r\n      },\r\n      {\r\n        label : 'Voted Amount',\r\n        field : 'voteAmount',\r\n      },\r\n      {\r\n        label : 'Number of Yes',\r\n        field : 'NumberOfYesMenber',\r\n      },\r\n      {\r\n        label : 'Amount of Yes',\r\n        field : 'votesForYes',\r\n      },\r\n      {\r\n        label : 'Number of No',\r\n        field : 'NumberOfNoMember',\r\n      },\r\n      {\r\n        label : 'Amount of No',\r\n        field : 'votesForNo',\r\n      },\r\n      {\r\n        label : 'Status',\r\n        field : 'status',\r\n      },\r\n      {\r\n        label : 'Active or Ended',\r\n        field : 'isVoteEnded',\r\n      }\r\n     ],\r\n     rows : rowsCaptureTableElection,\r\n    }\r\n\r\n\r\n    const handleElectionContent = (e) => {\r\n      let addLabel  = e.target.value\r\n      this.setState({\r\n        electionContent : addLabel\r\n      }) \r\n    }   \r\n\r\n    const handleElectionAttachments = (e) => {\r\n      let addLabel  = e.target.files[0]\r\n      this.setState({\r\n        attachment : addLabel\r\n      }) \r\n    }   \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <TopNav/><br/><br/>\r\n\r\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n          <Row>\r\n            <Col sm={2}>\r\n              <Nav variant=\"pills\" className=\"flex-column\">\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"first\">DASHBOARD</Nav.Link>\r\n                </Nav.Item><br/>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"second\">ELECTION STATUS</Nav.Link>\r\n                </Nav.Item><br/>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"third\">CREATE NEW ELECTION</Nav.Link>\r\n                </Nav.Item><br/>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"fouth\">VOTE</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Col>\r\n\r\n\r\n            <Col sm={10}>\r\n              <Tab.Content>\r\n\r\n                {/* Dashboard */}\r\n                <Tab.Pane eventKey=\"first\">\r\n                  <h3>Vegan Rob's Governance Token</h3><hr/><br/>\r\n                  <div className = \"row\">\r\n                    <div className='col-4'>\r\n                      <Card bg = \"light\">\r\n                        <Card.Header  bg = \"dark\" > <h6>TOTAL SUPPLY</h6></Card.Header>\r\n                        <Card.Body>\r\n                          <Card.Text>\r\n                            {this.state.totalSupply}\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </div>\r\n                    <div className='col-4'>\r\n                      <Card bg = \"light\">\r\n                        <Card.Header  bg = \"dark\" > <h6>HOLDER NUMBER</h6></Card.Header>\r\n                        <Card.Body>\r\n                          <Card.Text>\r\n                            {this.state.holders.length}\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </div>\r\n                    <div className='col-4'>\r\n                      <Card bg = \"light\">\r\n                        <Card.Header  bg = \"dark\" > <h6>DAO OWNER</h6></Card.Header>\r\n                        <Card.Body>\r\n                          <Card.Text>\r\n                            {this.state.owner}\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </div>\r\n                  </div><br/><br/><br/><br/>\r\n                  <h3>Members of Vegan Rob's DAO</h3><hr/>\r\n                  <MDBDataTableV5 hover entriesOptions={[5,10,20,50,100,200,500,1000]} entries={5} pagesAmount={300} data={holderTableData}  materialSearch /><br/><br/>\r\n                </Tab.Pane>\r\n\r\n                {/* Election Status */}\r\n                <Tab.Pane eventKey=\"second\">\r\n                <h3>Elections</h3><hr/><br/>\r\n                  <div className = \"row\">\r\n                    <div className='col-4'>\r\n                      <Card bg = \"light\">\r\n                        <Card.Header  bg = \"dark\" > <h6>Number OF Created Election</h6></Card.Header>\r\n                        <Card.Body>\r\n                          <Card.Text>\r\n                            {this.state.NumberOfElection}\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </div>\r\n                    <div className='col-4'>\r\n                      <Card bg = \"light\">\r\n                        <Card.Header  bg = \"dark\" > <h6>Active Election</h6></Card.Header>\r\n                        <Card.Body>\r\n                          <Card.Text>\r\n                            {this.state.OpenedNumberElection}\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </div>\r\n                    <div className='col-4'>\r\n                      <Card bg = \"light\">\r\n                        <Card.Header  bg = \"dark\" > <h6>Closed Election</h6></Card.Header>\r\n                        <Card.Body>\r\n                          <Card.Text>\r\n                            {this.state.EndedNumberElection}\r\n                          </Card.Text>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </div>\r\n                  </div><br/><br/><br/><br/>\r\n                  <h3>Election Status</h3><hr/><br/>\r\n                  <MDBDataTableV5 hover entriesOptions={[5,10,20,50,100,200,500,1000]} entries={5} pagesAmount={300} data={electionTable}  materialSearch /><br/><br/>\r\n\r\n                </Tab.Pane>\r\n\r\n                {/* VOTE */}\r\n                <Tab.Pane eventKey=\"third\">\r\n                <h3>Create New Election</h3><hr/><br/>\r\n                <div className='row'>\r\n                  <div className='col-1'></div>\r\n                  <div className='col-10'>\r\n\r\n                    <Form.Group className=\"position-relative mb-3\">\r\n                      <Form.Label><h4>1.Attachments</h4></Form.Label><hr/><br/>\r\n                      <Form.Control\r\n                        type=\"file\"\r\n                        required\r\n                        name=\"file\"\r\n                        onChange = {handleElectionAttachments}\r\n                        defaultValue = {this.state.electionContent}\r\n                      />\r\n                    </Form.Group><br/><br/>\r\n\r\n                    <h4>2.Content</h4><hr/><br/>\r\n                    <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                      <Form.Control as=\"textarea\" rows={3} defaultValue = {this.state.electionContent}  onChange={handleElectionContent} placeholder = \"please input content of Election\"/>\r\n                    </Form.Group><br/>\r\n                    <Button variant=\"primary\" onClick={()=> this.createElection()}>Create New Election</Button>\r\n\r\n                  </div>\r\n                  <div className='col-1'></div>\r\n                </div>\r\n                \r\n                </Tab.Pane>\r\n\r\n                {/* vote */}\r\n                <Tab.Pane eventKey=\"fouth\">\r\n                  <h4>Vote to New Products Election</h4><hr/><br/><br/>\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Col>\r\n          </Row>\r\n        </Tab.Container>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}